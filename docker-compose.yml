services:

  #
  # The API gateway that exposes backend components at domain based URLs
  #
  api-gateway:
    image: custom-api-gateway:1.0
    ports:
      - 80:3001
    volumes:
      - ./apigateway/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: '/usr/local/kong/declarative/kong.yml'
      KONG_PROXY_LISTEN: '0.0.0.0:3001'
      KONG_LOG_LEVEL: 'info'
      KONG_PLUGINS: 'bundled,phantom-token'
      KONG_NGINX_HTTP_LUA_SHARED_DICT: 'phantom-token 10m'

  #
  # The utility MCP server that runs in front of the stocks API
  #
  utility-mcp-server:
    image: utility-mcp-server:1.0
    hostname: utility-mcp-server
    environment:
      STOCKS_API_URL: 'http://stocks-api:3000/stocks'
      JWKS_URI: 'http://idsvr:8443/oauth/v2/oauth-anonymous/jwks'

  #
  # The stocks API that uses OAuth to secure access to financial data
  #
  stocks-api:
    image: stocks-api:1.0
    hostname: stocks-api
    environment:
      JWKS_URI: 'http://idsvr:8443/oauth/v2/oauth-anonymous/jwks'
      REQUIRED_JWT_ALGORITHM: 'PS256'
      REQUIRED_ISSUER: 'http://login.demo.example/oauth/v2/oauth-anonymous'
      REQUIRED_AUDIENCE: 'http://api.demo.example'
  
  #
  # The Curity Identity Server authenticates users and issues access tokens to MCP clients used by AI agents
  #
  authorization-server:
    image: curity.azurecr.io/curity/idsvr:latest
    hostname: idsvr
    volumes:
      - ./idsvr/curity-config.xml:/opt/idsvr/etc/init/curity-config.xml
    environment:
      ADMIN: 'true'
      LICENSE_KEY: "${LICENSE_KEY}"
      LOGGING_LEVEL: 'INFO'

  #
  # The SQL database used by the Curity Identity Server which contains dynamically registered clients
  #
  authorization-server-data:
    image: postgres:17.4
    hostname: dbserver
    volumes:
      - ./idsvr/data-backup.sql:/docker-entrypoint-initdb.d/data-backup.sql
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'Password1'
      POSTGRES_DB: 'idsvr'

  #
  # An email server with a test inbox to allow email authentication for test users
  #
  mail-server:
    image: maildev/maildev:latest
    hostname: smtpserver
    environment:
      MAILDEV_INCOMING_USER: 'noreply@maildev'
      MAILDEV_INCOMING_PASSWORD: 'Password1'
